%!PS-Adobe-3.1 EPSF-3.0%%Title: Untitled-1%%Creator: Adobe Illustrator(R) 11%%AI8_CreatorVersion: 11.0.0%AI9_PrintingDataBegin%%For: Elizabeth Gibney%%CreationDate: 27/8/08%%BoundingBox: 0 0 1679 1087%%HiResBoundingBox: 0 0 1678.1285 1086.7256%%CropBox: 0 0 1678.1285 1086.7256%%LanguageLevel: 2%%DocumentData: Clean7Bit%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)%%+ procset Adobe_CoolType_Utility_T42 (1.0 0)%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.19 0)%%+ procset Adobe_CoolType_Core (2.23 0)%%+ procset Adobe_AGM_Core (2.0 0)%%+ procset Adobe_AGM_Utils (1.0 0)%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors:  Cyan Magenta Yellow Black%%DocumentCustomColors: %%CMYKCustomColor: %%RGBCustomColor: %ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 84 8%%BeginData: 13952 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFCFFFD13FF7DA8A8FD15FFA8A884A9A8AF7DFD5CFFAFFF7D5252%7D527D7DA8FD0AFFA88484A87E84597E7D845959535A595353A87E84847D%A8FD54FFA8A1A06F52A9FFFFA8A85276A1FFFFFFA8FFA8A8847E535A597E%5A5A535A5359537E535A5359537E597E287DA9A97EA87DFD4EFFA79A7693%6F7DA8FFFFA97D5952A77DA87DA77DA87D532F5A537E597E597E7EA98484%597E53595359537E53595359597E532753FD4CFFA19AA09375A052A8FFFF%A8A8527DCFCFA8A8A7A8A77E53595984A8A8A8AFA8AEA8FD05FFA95A535A%535A535A595A537E2E2EA8FD4AFF7C9A756F767568527DFFFFFF7D7D52A1%7DA8A8CFA87E2F5A537E7DA7A0A0999A76A8FFA87DFFFFCA7D535953537E%53592E7E7D532852FD49FFA0A07693A0996FCF52A8FFFFFFA87D7D7DA17D%7D7DA8535A537E93B5FCFC8CFC8CB499CF7DA8A8A87DA87DA8A8A87C7E7D%5953A97D53287DFD47FF76A06F6F7C6F75AFA87D7DFFFFFFA87D52A8A783%597D2E59537775B48C99999AA0A1767D537D7D7D537C7DA883FFA87CA7FF%592F59A8525328A8FD45FFA19A7693A16F9AFFA8FF7D7DFFFFFFA87D527D%A883845983595958FD047DA099C2A8AFA8A87DA87DA875CAA8C99AC2759A%A8A953597DFF7D532FFD44FFA89AA06F76936FAFA8CFA87D52FFFFFFA87D%52A1A1A8598359845983FD04595175757D52FD047DA17C75688C688C6875%6893A7A853597E7E535359FD07FFCAFD3BFFCF99A168A868A8A8FFA8A852%7DA8FFFFFF7D527DA883848384838483848484838459847DA87D7D527D6F%8C6E938C9AA0C3A7A08C93A1A87C84A984535AA8FD07FFA1FFA8FFCFFD36%FFA0A06F997693A8CFA8A7A77D52FFFFFFA8A8527DA1A87D845984598459%84598459835983A7A87D7D529368A7A8CAA7A09999A1A7688C758359FF7E%535383AFCAA1FFFFFFFD04A8A7A8A8A87CA8A8FFCFFD2FFF9AA093A1939A%FFA8FFA8A853537EFFFFA859532853598483847D8483847D848384598383%A8A7A87D7D6FA0A099FD048C688CA0CA936F7C84A8A9535A59FF7CA1FFC3%A0CAC3FFCACAA8A8A8A1A7CAA8CFA8FFCFFD2BFFCA99A068A768A8A8CFCF%FF7D7D2829282F2829062F2F5359845983598459835984597D5983A1A876%76597D6F8C688C93A0A1A1688C93AE6E937EA8A85A537DFFA1688CFD0468%6F7575CAA1FFA8CAA8CAA8A8A7CF767DA8FD28FFA0C393C29A93AEFFCFFF%A8CFCFCA7D53282F282F29532F848384838483848384838459847CA07D93%8C7D599399A7CACFA09A7CFF998C92C98CA8A8FF595A59FFC2FC8CB58C93%8C8D6E6F689399BCA0FD04CAFFA87C7DFD28FFAF9AA192A1939AFFA8FFA8%A8A8CF5953282F2829282F28295984598459847D8459847D7D5983759368%9A7D7D52A175936899756E6ECFA18C9A937684847E597EFFCA99BB8CB58C%FC8C936E8C8C8C688C68936F9A766F4A76A8FD27FFCA9AC393C98CCFA8FF%FFFFA8CAA884598453592F2F282F2859838483847D8483847D8459837DA0%6EA076937D7D75A0A1CFA8A8A86F68A76F9999997E84597E5AFD05FFA8C9%BCBB92B5FCB58CB58C938C6F6868446F68A7A8FD26FFA7A0939A9999A8CF%A8FFA7A8A8A87D84838459845953292F2853538483845984598359835976%68A0A08C687D537DA1A07575277CA8A16FA168A068A17D84597E5A9A6893%9AC9A9FFAFA7A1C293B58CB0FC9344684A7C75684A7CA8FD26FFA0BC9AA0%99FFA8FFCFCFA8CFA8A88384848AA8A85A7E7E7E2F542F53538483848384%7D8452707D9392A7757D53754B754A754A4B519AA0939A9375A9A9A97EFF%C9C2938C688D8C9A9AFD04FFCAC2BC99757CA775A16F6851FD09FFCF9A68%99CAFD19FFA0999A9999A8CAA8CFA7CAA8CA838483845FAE7E5A59A975A0%767D2F2F28532F5959835953062928534C70597D52754A6F4B76524B4AA0%999375A0A9FF7E84A8FD04FFC99A996868688D99A0A8FFFFAE7C76444444%A84A75A8FD07FFA1938C93A0FF7692689AFFFFA8FD12FFA0C393C299FFA8%FFA8CAA8CFA8A859FD05845A7E7D99C9BBA87D7D8453532F53282F282F28%2F292F2F7D59764A997C7D52525276527D757675FFA9857EFFFFBC93C2C3%FFFFFFA8A0938D8C8C8CBC9A6E446F6F686F7C75FD07FFA0B58C9AFFFF9A%938C99A8FF9393A1FFCFFD0FFFA79A93A193A7FFFD04A8A7CAA883598483%84595A597D99C299A84BA8A8A87D7E532F282F282F285959764A764A99C1%C8A0A076762752277D5276527D7E84A9FFA7766F938C9399A7AFFFFFCF99%8C686844757DA144444B76FD06FFA7B58C99A8FF99B08C9AFFFF6F8CA1FF%7DA8FD0FFFA7A099C992CAA8CFA8CFA8CFA87D5984848A847D7E7E76C39A%C97D7DA8AEA8CFA8A87E7D5359527D75A07575756F9FC8C8C8C1C8C2A07C%7D5252527D525252FD05FFA7A1769A6F9399C3CAFFFFFFA0A17D7576A144%7575FD06FFC2FCB5A1FFA1B5FC9AFFFF9A93A1FFA87D7DFD0FFFCA9A9A93%99A7A8A8CFFD04A8537D59845953287E7D997CA0A8527DAEA8CAA8CFA8A0%68C9689A99A051754B75333357829FC8C1C2C1C2C1C87C7C525251527DFD%07FFA8A1A09A6F93939AA0CF6F6F4A6876754A75FD05FFCA8CB593FFA899%FC93A7FFA18DA0FFA87D527DFD0FFFA8C3939A9AC3A8CFA8FFA8CFA8FFA8%A85353535A7D7E93CA75A175A8A8CFA8CFA8FF9393A18CA199A175757599%A77C5E335757817BC8C2C8C1A09FA051525252FD08FFA8FFFFFFA1A19A93%6F767DA84BFD046FCAFD04FF99B58CCAFFA18CB59AFFAEBC93FFFFA87C7D%7DFD10FF769A99996FAFA7A8A8CFA8CAA7CFA8CA7D7E597E76B4A193A17C%A7CAA8CFA8FFA78C9A9A68A199A14A756EA1A8CAA7A77C5E332D2C7B99C2%759F9F7C4B5227A8FD06FFA8A8A8FD05FFA87D7D7C518351756F6E76FFFF%FFA1938C9AAFFF93B58CCAFFA18CA1FFFF527D767DCFFD0FFFCAA099999A%AECAA8FFCAFFA8FFCFFFA8FF7E7E7E9AFCC993CAA8FFA8FFCAA87C9A8CA1%8CC39AA17B75759AA1A7A7CACACFCAA77C3357A0759F75A09F7D52527DFD%06FFCF7CA8A8CFA8FFA8FFA7A1757576A876754BCFFFFFCF9A8C93A7FFA0%B58C9AFFFF93B5CFFFA77D7D7DA8FD11FFA76F9A6FCAA8A8A8CFA8CFA8CF%A8CFA87E597E76FCA099A1AEA8CAA8CFA77C4A76A08C759AA175757599A1%7CA07CA1A1CA7DA157579FC29FA09FA0767D527DFD06FFA8A0757C76A17D%7DA8A8A7A87DA17DA14B75A8FFAFA08C9399FFA8938C93A1FFA18D9AFFA8%7D767D52A8FD12FFA775999ACFA8FFA8FFCACFA8FFCAFF7E7E5A7E8CC29A%A7A8CFA8CFA8FFA89375996FA075A1757B6FA1A1A1A0A7A0A07CA17D8357%C8C8C89FC29FA17D767DFD09FFA7A775A07CA0A1FD05A87D7576FFFFFF75%8C68CAFFA08CB599FFAE9A93CFFFA87C7D7D7DA8FD13FFA16F6F76A8A8CF%A8CFA8CAA8CFCAA8537E7D8C99A0A1CFA8CFA8CAA8A0689A7593A0FD0475%992D58767D7CA1A0A075A1587BC2C8A6C89FA07D7D527DFD06FFA8FD05FF%A8A17C7B757C7CA77C764AA0FFFFA89A68687CAE6F8C68A1FFA18CA0FFFF%7C7D7C7D7CFD15FFA16F9AA0FFA8FFCACFA8FFCFFF847E7EA88C9AA09AA7%FFCFCFA8CFA08C9AA08CA19AA7759F999F57572D587CA17CA1A75E7BC9FD%04C89FA77D7D7DFD0DFFA8FFFFCFA0A07BA76F6FA1FFFFFF7C9368A1AE9A%6893A1A87593A1FFA8FD047DA1FD16FF764B6FA0FFA8CFA8CFA8CFCAA859%7E7D8C92A892A0AEFFCACFA8A8689A758CA09A7C75757576A07B9F50577C%A17C8233C8C8C8C1C29FA07D7D52FD07FFA8FD05FFCAA8FD06FFA7754AA8%FFFFA8A7686876AF6F6868A1847568A1A77D527D7C7D7DFD16FF847E7675%A8FFA8FFA8FFA8FFA87E5A8476FC99A193FFCFFFCFFFA793999A8CA19AA7%759F757D527D7CA09FA0A0823382FD04C8C29F7CA17D76FD07FFA7A0A7A8%FFFFFFCFFD06FFA16F75CACF9FA7A793689AA89A6893A1A86F687DA87D7D%7C7D7DA8FD17FF535A7D9AA7CFA8CAA8CFA8CA597E598492FC76A0A7FFA8%FFCFA86899758C769A7C757599767D527D527C75A0757B9FC8A0C89FC87B%7D76767CFD07FFA8A8A1A77CA77CA8A8FFA8837CA7756F6FCF9FC1A0A168%686FA86F6868A77D6F68A17D7D7C7D527DA8FD17FF7E5A859AA0A0CAA8FF%CAFFCF7E5A7E7DA18CB5A1FFCFFFCFFFA893939A8CA19AA7517B6F76767D%7C7D767D527D76A0A0C8A0C89FA07DA152A8FD07FFCFA8FFAEFFA8A7A0C9%A1522DC29FA099A0C8C8C2C8A193689AA89A6893A1A76F6FA1A8FD057DFD%1AFFA8A19A9A99A7A7CAA8CF5A5A769A99A18C99A8CFA8FFCFA86E936F8C%76757C764A754B52527C527D527D767D527C9FA09FA07C7D527DFD08FFA8%A8A8CFA8FFA8FFCA5104A0C1C29FC89FC29FC8C2A7686875A76F6868A176%6F6EA8FD047D52A8FD1AFFA176C2A0C3A1A87D8359845A7E77B4A0A06ECA%CFFFCFFFA8938CA068A7999AA7514A6F4B52527C527D527D7D5251A09FA0%767D7C527DFD07FFA8FFA8CFA8FFCFCAFFFF2D2D51A09FC8C2C275A09FC8%A06F689AA1996893A1A16899A8A1769A757DA8FD19FFC96F9A759A7DFFA8%595983597E5A7E8CB47DA0A7FFA8CFCFA86F75518C6EA768A77C4B264B27%4B27FD04527D52769FA0767C525252FD07FFA77C7DA8A8AEA8A8A8FFFF83%2D517575759F759F759F759F6E686FA16F6868A1766E6FA876768C4476FD%1AFFCAA076A09A9AA1FFFD04845A7E5AC98C99A0FFCFFFCFA775756EA199%8C9AA193FFA1A775754B524B52527D527D52A0767D767C52FD09FF7C7C76%A1A1CFA8FFFFFFA7825EC89FA075A0759F75A09F996899A19A6893A0A168%9AA1A193934AA0BBC3CAFD1AFFA8A093A1FF848384597E5A7EA9A18C8C9A%FFCFFFA1CF768C92CA688CA7996F75A1CFA79968A0514B27525252275252%5227A8FD0AFFA8A87C7C757CA8FF83575782A6CDC8C89FA09F7B757B6E68%6EA1756868A17C686FA17693446F93B08CB592BC9ACAFD17FFA1C9FFFF83%8484845A7E7DA8AEA1939AA7FFCFFFFFCA938C9AC98C9AA8A16F936E9A9A%C99A939A934B525152275252A8FD08FFCFFD05FFCFA77C7C7C5E3382C2FD%04C8CDC8CDC8C89F9F686F7D76686F76A16893A1A068444BC3BCBBB5B58C%B58CB5BCC3CAFD17FF845984595A597D76A1A176759A76CFA8FFA8CF688C%A799689AA0CAA7A7A1A0688C766F68766FA07D7D7CFD08FFCAA1FFFFFFCF%FFFFCA7DCFA8A72D579FC8C1C89FC8C2C8A6C8C8C8A6BB8CA17C6E68A17C%686FA86F44447CA7A7A1A19ABC93B58CB58C9392A8A8FD13FFA859848484%5A7E7DA199A0769A75A0A8A1A7CAA8C96899A893688C8C9399938CA0A199%6E9A9ACAFD0CFFA77575A1A7FFFFFFA8A8A7CFCA5857C8C8C8C2C8C8C8C2%FD04C8CEBBB5A0FFA0B599A86E757D76686FA0CDC8C8A7A8A7A8A1C3B5BB%FCBC7D7DFD13FF53595F84835A537D769A6F756F9A757575A87DA8A89968%A0A7A19A9A689299A7938C68A09A9AFD05FFC39AA8A8FFFFFFCACFA1A075%7575A1A1CAA8CFA8CA7D5175A09FC8C2C8C2C89FC8C2C899B593CAAF9AB5%BCFFA193A8A0934BFD05C8A5C8A0A77DA8A19A9AA8A8FD15FFA8592F2953%7EA89A764B9A757575CAA8A8A7FFA7756E9399C9A8CFA7A068939AC29A9A%9AFD05FF998D8C9AA8FFFFFFA8CFA7CAA7A7757575A7A8FFA8FFCAA14B9F%9FFD05C8C2C899B5B5BCFFFFB5B5A0FFC2B5FFFF6F75FD0AC8A07D76A7A7%FD17FF7E537EA8FFFFCFA19A6E7575FFFFFFA1A87C75506E688C688C6893%689AA8FFA8C376CAFD04FF9ACAA8A192936FA7A7A8A8CFA7A7A1A77CA075%757CA7A8FF766F4A76A0C89FC89FC899B58C9AA8CF99B592CFAF999AFFC3%6F75C8A6C8A6C8C8C89FC8C8C85276A1A8A8FD1EFF7CA7A1FD04FFC37575%75A77C9A93936E999AFD0BFFA08C8CBCA1FFA7C2926F99CAFFFFCFA8A7CA%A8CAA0A075A0A1766F76FFC9C2C8C8C8A0BBB0B5A1FF99B5B5C9FFCA8DCA%FFC26EA7FD07C8CDC8C8A0A8A1A8A8FD26FF757575A0A1A175A075A1FD0C%FFCACA9A93688C8C9AA8A8A0998C9399A8AEFFA8A8A7CFA7C97C766F6FA1%CF9FC8C2C8C89F8CB599CF9AB58C9AFFCA939AFFFF8C75A6C8C8C8A0C89F%C89FC89FA7A1A1A1FD25FFCA75999AC29AA09A9A769AA1FD0BFFCA9393C9%CAC999938C8C6FC9CFFFA0BB9299A0CAA0A0A7CFA8A76F6F6FFFCF9F759F%9FC993B592CACA99FCB5C9FF93BBFFFFBC6F76FD09C8A0C8A7A1A1A8FD25%FFA7CAA7A1999A99764B9A6FA1FD0BFFC9688C68939ACAA8A0688C689299%CAA8CF9A926FA0759FA0A14B6F449AFFFFA8A775A7A1B58C9ACAA18CB099%FFA08C9AFF9A6844C2C8C89FC8A0C89FC8C2C8A0A1767DA7FD29FFCFA0A0%6F9A9A9AA1FD0BFFA8FFA0BB8C8C8CBCA0CFC9BC8C8C8CB59AFFA1767DA7%A09A6F766F99C2FD06FFBCFC99A8CF93B593CACABC93FFCAB54493C2FD09%C8C7A776A17DFD05FFA8FD26FFA8C39A9A75CAFD0CFF7DAEA8CA9993688C%92A0A7FFA0938C8C687C4A7575766F764A6F6FA1FD05FFC98CB5A1FFA0B5%8C9ACAA18CA1CAC3684493A7A7A7A0C8C8C8C7A77DA77DA17DA85A7E7EA9%A8A9FD29FFA1FD0DFFA1A1A8A8A8FFA8A0938C8C8C93C9CFCF9A686F7D4A%6F517644756FA1CAFD05FF93B093FFCF9AFCB5A7CF93B5CACA934B689399%C3A1A875A0C8C884857E7E7EA8847E5A7E5A84FD37FFA14A76A8A7A8A7A8%A8FFA19A8C8C8C9399A7446F58A17C7644754A9AA7FD05FFA1B08CA1FFA7%8CFC99FFA18D9AFF9A6F68936FB58CB5994B76A8A18484A98484A1845A7E%595A5AFD36FFA7517CFFA8A8A8CFA8A87DFFFFCFA0BB8C8C6F76446E446F%6E76449A9AFD06FFBCFC99FFFF99B592CAFFBC92FFCAA14B9A6F845AA19A%9344B5BBA884AF84A9A8A87E7E5A845AA9FD35FF7C51A1FFFFCAA1A7A7A8%7C7DA7A8A8FFA8CA6E68526F4468447644999AA0FD05FFC38CB5A1FF9AB5%8C9AAFA88C9AFFCA7D7E5A7E5A7E75844C4B76B5A18584A984A87D7E5A7E%5A7EA8FD34FFA176A8FFFFFFA0C29AA17C517CCFA8A8A8CFA87644767DA1%7D7C44C9FFC9A8FD05FF93FC93FFAE93FCB5A1FF9AB5A7FF7D7D7E845A84%7E7E5A775A847EA984A984C2BC7D5A845A7E7EFD35FFA8A8FFFFFFCAC29A%C2754B4AA1A1A8A7A8A7A1526F4A68446F44A1FD08FFA0FC8CA1FFA18CFC%93FFA89393FFA87D52A07E847E845A7E537E5A84848584847093777E5A7E%5A7EA8FD3AFF9AC39A5175C39AA1A1A8A8CAA8A04A6E446E44C9FD09FFBB%8C99FFFF93B58CCAFFA18CC9FFA87C7D7DFFA9A984A97E857E8484AF84A9%84855A845A847E7EA8FD3BFFCA764B75C29A9A9AC29AA1A17C26756F7575%FD0AFFC38C93A1FFA0B58C99FFFF9399AFFF7D7D52A8FFFF848584847E85%7E847E85847E5A7E5A7E5A7E5AA8FD3CFFA77CCA9AC29AC2C2C2BCA02676%7DC3BCCAFD0AFF93B593FFAF99FC93A1FFA1B0A1FFA87D7D7DA8FFAF8559%A9848584A984857E857E7E5A847E7E5A84AFFD40FFA1A099C2BC9A269A9A%A09ABCA1FD09FFA18C68A1FFA18CFC99FFA89392FFFF7D527D7DFFFFAF5A%59A8FFA8A97E847E847E847E7E597E5A7E7EFD43FFCAC2C24AA0C2C39AA0%9AFD08FFA19AA86868A1FF93B592CFFFA78CC3FFA87C7D7DFFFFFFA97E5A%AFA9FFFFFFA9A98485848584FF84845AAFFD45FF759A9AC29A766FA0FD07%FFCF9A9A7C6F44767D6F689AAFFF9393A8FF7D76527DCAFFA9A95A7E7E85%7EA9A8FFFFFFA8A95AA9FFFFA9A9A8FD44FFCFCFFFCFC3C29A9A76FD07FF%A19A9AC375686F844B6875FFA1939AFFA87D7676769AA0A8848584857E85%848584AFAFFFA8A9FD47FFCACFFD06FFA8CAA1FD08FFC96FC29AC299A07D%6F446F7D7D44A0AFA8527676C29ABC7D847E847E847E847E845A847E8484%FD47FFCFC2FD11FFCAFFCACFCAC9C2C39A6F4B7D526F76A87D7D7CC9BCC3%C2A95A84A9AF848584858485848584FD48FFA6C8FD17FFC99A9A4B9A4B76%44767D7D52A8FFCAC2A87E5A7E85A8AFA8857E847E858484AFFD47FFC9C9%FD18FFC39A767676C29976A8767CA8FFFFFFA88559AFA9A984AFA8AF8485%84A984FD48FFC9CFFD15FFCA76A8A89A76766FC2BCC29AA0999A76CAFFA9%5A85A8FFFFFF84847EAFA8845AA9FD5FFF9A9A6FA09A9A75C9C9C9C3C3BC%C39A9AA0FF8485848584AFFD04FF84A984A9FD5FFFA19A9AC29AC39A9A9A%FFFFFFCAC9BCC299C9AF847EA97E845A8584AFFFFFA88484FD5FFFA16FC2%C2C29AC3C29A76C9CAFFCAC3999ACAAF7EFFFFFFA9857E8584A9A8AF84FD%60FFA1A1A1C3A1C29AC29A9A6FA1FFFFFFA1A0FF7EA8FD05FFAF84845A84%7EA9FD66FFCAC2C39AC2A1FD05FFA98584AFFD06FFAFAF8485A9FD67FFC3%9A9A75FD06FFAF7EA9848484FD06FFA95AFD69FFC993C9FD0AFFAFA97EA9%A9FFFFFF84A9FD69FFA8C9CAFD0DFF84847EA9A884A8FD7CFF848584FD7E%FF5A84FD7EFFAFA8FD8DFFFF%%EndData%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 68 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 	exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/bdict{	mark}bdf/edict{	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end}def/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup () cvn eq{						pop (Process)					}if				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust	AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse	AGMUTIL_GSTATE_flt setflat	end}def/get_gstate_and_matrix{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_ctm matrix currentmatrix def	end	get_gstate}def/set_gstate_and_matrix{	set_gstate	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_ctm setmatrix	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/agm_sethalftone{ 	dup	begin		/_Data load		/Thresholds xdf	end	level3 	{ sethalftone }{		dup /HalftoneType get 3 eq {			sethalftone		} {pop} ifelse	}ifelse} def /rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		exch () /SubFileDecode filter	}	{		exch pop	}	ifelse	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/filter_indexed_devn{	cvi Names length mul names_index add Lookup exch get} bdf/filter_devn{		4 dict begin	/srcStr xdf	/dstStr xdf	dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch		[			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx			currentdict /srcStr get /readstring cvx /pop cvx			/dup cvx /length cvx 0 /gt cvx [				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx				names_index Names length currentdict /srcStr get length 1 sub {					1 /index cvx /exch cvx /get cvx					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx				} for				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx			] cvx /if cvx			/end cvx		] cvx		bind		/exec cvx	] cvx	end} bdf/AGMUTIL_imagefile nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	10 dict begin	/imageDict xdf	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def	/imbufIdx 0 def	/origDataSource imageDict /DataSource get def	/origMultipleDataSources imageDict /MultipleDataSources get def	/origDecode imageDict /Decode get def	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def	/srcDataStrs [ imageDict begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi string		} repeat		end ] def	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse	{		/imbufCnt imageDict /DataSource get length def		/imbufs imbufCnt array def		0 1 imbufCnt 1 sub {			/imbufIdx xdf			imbufs imbufIdx imbufLen string put			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put		} for		DeviceN_PS2 {			imageDict begin		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def			/MultipleDataSources false def			/Decode [0 1] def			end		} if	}{		/imbuf imbufLen string def		Indexed_DeviceN level3 not and DeviceN_NoneName or {			imageDict begin		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def			/Decode [0 1] def			end		}{			imageDict /DataSource {AGMUTIL_imagefile imbuf readstring pop} put		} ifelse	} ifelse	imageDict exch	load exec	imageDict /DataSource origDataSource put	imageDict /MultipleDataSources origMultipleDataSources put	imageDict /Decode origDecode put		end} bdf/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		2 dict begin		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {			/imbuf imbufLen string def		}if		1 1 Height { 			pop			MultipleDataSources {			 	0 1 DataSource length 1 sub {					DataSource type dup					/arraytype eq {						pop DataSource exch get exec					}{						/filetype eq {							DataSource exch get imbuf readstring pop						}{							DataSource exch get						} ifelse					} ifelse					AGMUTIL_imagefile exch writestring				} for			}{				DataSource type dup				/arraytype eq {					pop DataSource exec				}{					/filetype eq {						DataSource imbuf readstring pop					}{						DataSource					} ifelse				} ifelse				AGMUTIL_imagefile exch writestring			} ifelse		}for		end		true	}ifelse	end} bdf/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}defstatusdict /product known userdict /AGMP_current_show known not and{	/pstr statusdict /product get def	pstr (HP LaserJet 2200) eq 		pstr (HP LaserJet 4000 Series) eq or	pstr (HP LaserJet 4050 Series ) eq or	pstr (HP LaserJet 8000 Series) eq or	pstr (HP LaserJet 8100 Series) eq or	pstr (HP LaserJet 8150 Series) eq or	pstr (HP LaserJet 5000 Series) eq or	pstr (HP LaserJet 5100 Series) eq or	pstr (HP Color LaserJet 4500) eq or	pstr (HP Color LaserJet 4600) eq or	pstr (HP LaserJet 5Si) eq or	pstr (HP LaserJet 1200 Series) eq or	pstr (HP LaserJet 1300 Series) eq or	pstr (HP LaserJet 4100 Series) eq or 	{ 		userdict /AGMP_current_show /show load put		userdict /show {		  currentcolorspace 0 get		  /Pattern eq		  {false charpath f}		  {AGMP_current_show} ifelse		} put	}if	currentdict /pstr undef} if/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		1 dict begin		/flushbuffer Width cvi string def		1 1 Height cvi			{			pop			0 1 DataSource length 1 sub				{				DataSource exch get				dup type dup 				/filetype eq					{					exch flushbuffer readstring pop pop					}if				/arraytype eq					{					exec pop					}if				}for			}for		end		}		{		/DataSource load type dup 		/filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 div mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		/arraytype eq			{			1 1 Height { pop DataSource pop } for			}if		}ifelse	end}bdf/addprocs{	  2{/exec load}repeat	  3 1 roll	  [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin	 currentdict 2 index known{	 	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse		 addprocs /TransferFunction xdf 		 currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/clonearray{	dup xcheck exch	dup length array exch	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 	{	Adobe_AGM_Core/AGMCORE_tmp AGMCORE_tmp 1 add ddf 	dup type /dicttype eq		{			AGMCORE_tmp			exch			clonedict			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	dup type /arraytype eq		{			AGMCORE_tmp exch			clonearray			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	exch dup	AGMCORE_tmp 4 -1 roll put	}forall	exch {cvx} if}bdf/clonedict{	dup length dict	begin		{		dup type /dicttype eq			{				clonedict			} if		dup type /arraytype eq			{				clonearray			} if		def		}forall	currentdict	end}bdf/DeviceN_PS2{	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and} bdf/Indexed_DeviceN{	/indexed_colorspace_dict AGMCORE_gget dup null ne {		/CSD known	}{		pop false	} ifelse} bdf/DeviceN_NoneName{		/Names where {		pop		false Names		{			(None) eq or		} forall	}{		false	}ifelse} bdf/DeviceN_PS2_inRip_seps{	/AGMCORE_in_rip_sep where	{		pop dup type dup /arraytype eq exch /packedarraytype eq or		{			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and			{				/currentcolorspace exch AGMCORE_gput				false			}			{				true			}ifelse		}		{			true		} ifelse	}	{		true	} ifelse} bdf/base_colorspace_type{	dup type /arraytype eq {0 get} if} bdf/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 216 dict dup begin put/nd{	null def}bind def/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSA_cache 0 dict def/AGMCORE_CSD_cache 0 dict def/AGMCORE_pattern_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_ovp nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/AGMCORE_Default_PageSize nd/AGMCORE_currentbg nd/AGMCORE_currentucr nd/AGMCORE_gradientcache 32 dict def/AGMCORE_in_pattern false def/knockout_unitsq nd/AGMCORE_CRD_cache where{	pop}{	/AGMCORE_CRD_cache 0 dict def}ifelse/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	2 dict begin	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	end	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/npth_clp{	newpath clip} def/add_grad{	AGMCORE_gradientcache 3 1 roll put}bdf/exec_grad{	AGMCORE_gradientcache exch get exec}bdf/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/dictstackcount countdictstack def	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	dictstackcount 1 countdictstack 1 sub {end}for	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont	/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto	/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show			0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def